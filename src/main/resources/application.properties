spring.application.name=api-reservation
server.port=3000

management.info.env.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=*

server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=application/json,application/xml,text/html,text/plain
server.servlet.context-path=/api

info.application.groupId=@project.groupId@
info.application.artifactId=@project.artifactId@
info.application.version=@project.version@

http-connector.hosts.api-catalog.host=localhost
http-connector.hosts.api-catalog.port=6070
http-connector.hosts.api-catalog.endpoints.get-city.url=/api/flights/catalog/city/{code}
http-connector.hosts.api-catalog.endpoints.get-city.readTimeout=1000
http-connector.hosts.api-catalog.endpoints.get-city.writeTimeout=1000
http-connector.hosts.api-catalog.endpoints.get-city.connectionTimeout=2000


# ====== CIRCUIT BREAKER CONFIG ======
# Umbral de error (% de llamadas fallidas para abrir el circuito)
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
# Tipo de ventana de an�lisis de errores (por cantidad de llamadas)
resilience4j.circuitbreaker.configs.default.sliding-window-type=count_based
# N�mero de llamadas a analizar en la ventana deslizante
resilience4j.circuitbreaker.configs.default.sliding-window-size=5
# Permitir la transici�n autom�tica de abierto a medio-abierto
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
# Tiempo que permanece el circuito en estado abierto antes de probar de nuevo
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10

# N�mero de llamadas permitidas en estado medio-abierto
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=1
# Desactiva el health check autom�tico de Spring Boot Actuator
resilience4j.circuitbreaker.configs.default.register-health-indicator=false
# Lista de excepciones que deben considerarse como fallas
resilience4j.circuitbreaker.configs.default.record-exceptions[0]=io.netty.handler.timeout.ReadTimeoutException
resilience4j.circuitbreaker.configs.default.record-exceptions[1]=java.lang.RuntimeException
resilience4j.circuitbreaker.configs.default.record-exceptions[2]=java.lang.Exception

# Instancia de circuit breaker para el servicio "api-catalog"
resilience4j.circuitbreaker.instances.api-catalog.base-config=default

# ====== RATE LIMITER CONFIG ======
# N�mero m�ximo de llamadas permitidas por per�odo
resilience4j.ratelimiter.configs.default.limit-for-period=2
# Duraci�n del per�odo (refresh rate)
resilience4j.ratelimiter.configs.default.limit-refresh-period=3s
# Tiempo m�ximo que una llamada esperar� para adquirir permiso antes de fallar
resilience4j.ratelimiter.configs.default.timeout-duration=1
# Instancia del rate limiter para "post-reservation"
resilience4j.ratelimiter.instances.post-reservation.base-config=default

springdoc.api-docs.version=OPENAPI_3_0

##########################################################
# LOGGING CONFIGURATION
##########################################################
logging.level.root=INFO
logging.level.com.api_reservation=DEBUG
# Para guardar logs en archivo (opcional)
#logging.file.name=logs/api-reservation.log
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n